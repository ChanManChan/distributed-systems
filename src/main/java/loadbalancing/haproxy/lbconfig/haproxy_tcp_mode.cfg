global
    maxconn 500

defaults
    mode tcp # Layer 4 load balancing (this will force the load balancer to operate in the transport networking layer which understands only tcp and does not know anything about http which is a higher networking layer)
    # If we keep sending requests to our localhost, suddenly all our requests are going to the same server, instead of each request being sent to a different one
    # The reason of this behaviour is anytime we refresh the browser, we actually send a new http request GET request to haproxy, however all those requests are still sent on the same TCP connection.
    # Since our load balancer now does not understand HTTP as far as its concerned all the TCP packets belong to the same stream and hence will be sent to the same server.
    # To break the TCP connection and open a new one for each request, we need to close the web browser entirely and open new browser instance and send a new request to localhost, a new TCP connection will be established.
    # This new connection will be routed to a new backend server based on the roundrobin policy
    timeout connect 10s
    timeout client 50s
    timeout server 50s

frontend http-in
    bind *:80
    default_backend application_nodes

backend application_nodes
    balance roundrobin
    option httpchk GET /status
    server server01 app1:9001 check
    server server02 app2:9002 check
    server server03 app3:9003 check

listen stats_page # will be ignored as it requires HTTP mode
    bind *:83
    stats enable
    stats uri /